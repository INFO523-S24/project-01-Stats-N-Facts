{
  "hash": "80bfb8d5f7b00b6d14fae5c47cab10cf",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: 'Exploring European Drug Development: COVID Vaccine Revisions and Recent Hepatitis B Medications'\nsubtitle: INFO 523 - Project 1\nauthor: Stats-N-Facts\nformat: html\neditor: visual\n---\n\n## Abstract\n\nAdd project abstract here.\n\n::: {#52257103 .cell execution_count=1}\n``` {.python .cell-code}\n# Load Libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport textwrap\n```\n:::\n\n\n::: {#ce3db4ca .cell execution_count=2}\n``` {.python .cell-code}\n# Read in the data\nurl = 'data/drugs_dataset.csv'\ndrugs = pd.read_csv(url)\n\ndrugs.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>category</th>\n      <th>medicine_name</th>\n      <th>therapeutic_area</th>\n      <th>common_name</th>\n      <th>active_substance</th>\n      <th>product_number</th>\n      <th>patient_safety</th>\n      <th>authorisation_status</th>\n      <th>atc_code</th>\n      <th>additional_monitoring</th>\n      <th>...</th>\n      <th>marketing_authorisation_holder_company_name</th>\n      <th>pharmacotherapeutic_group</th>\n      <th>date_of_opinion</th>\n      <th>decision_date</th>\n      <th>revision_number</th>\n      <th>condition_indication</th>\n      <th>species</th>\n      <th>first_published</th>\n      <th>revision_date</th>\n      <th>url</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>human</td>\n      <td>Adcetris</td>\n      <td>Lymphoma, Non-Hodgkin;  Hodgkin Disease</td>\n      <td>brentuximab vedotin</td>\n      <td>brentuximab vedotin</td>\n      <td>2455</td>\n      <td>False</td>\n      <td>authorised</td>\n      <td>L01XC12</td>\n      <td>False</td>\n      <td>...</td>\n      <td>Takeda Pharma A/S</td>\n      <td>Antineoplastic agents</td>\n      <td>2012-07-19</td>\n      <td>2022-11-17</td>\n      <td>34.0</td>\n      <td>Hodgkin lymphomaAdcetris is indicated for adul...</td>\n      <td>NaN</td>\n      <td>2018-07-25T13:58:00Z</td>\n      <td>2023-03-13T11:52:00Z</td>\n      <td>https://www.ema.europa.eu/en/medicines/human/E...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>human</td>\n      <td>Nityr</td>\n      <td>Tyrosinemias</td>\n      <td>nitisinone</td>\n      <td>nitisinone</td>\n      <td>4582</td>\n      <td>False</td>\n      <td>authorised</td>\n      <td>A16AX04</td>\n      <td>False</td>\n      <td>...</td>\n      <td>Cycle Pharmaceuticals (Europe) Ltd</td>\n      <td>Other alimentary tract and metabolism products,</td>\n      <td>2018-05-31</td>\n      <td>2023-03-10</td>\n      <td>4.0</td>\n      <td>Treatment of adult and paediatric patients wit...</td>\n      <td>NaN</td>\n      <td>2018-07-26T14:20:00Z</td>\n      <td>2023-03-10T17:29:00Z</td>\n      <td>https://www.ema.europa.eu/en/medicines/human/E...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>human</td>\n      <td>Ebvallo</td>\n      <td>Lymphoproliferative Disorders</td>\n      <td>tabelecleucel</td>\n      <td>tabelecleucel</td>\n      <td>4577</td>\n      <td>False</td>\n      <td>authorised</td>\n      <td>NaN</td>\n      <td>True</td>\n      <td>...</td>\n      <td>Pierre Fabre Medicament</td>\n      <td>NaN</td>\n      <td>2022-10-13</td>\n      <td>2023-03-09</td>\n      <td>2.0</td>\n      <td>Ebvallo is indicated as monotherapy for treatm...</td>\n      <td>NaN</td>\n      <td>2022-10-12T16:13:00Z</td>\n      <td>2023-03-10T13:40:00Z</td>\n      <td>https://www.ema.europa.eu/en/medicines/human/E...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>human</td>\n      <td>Ronapreve</td>\n      <td>COVID-19 virus infection</td>\n      <td>casirivimab, imdevimab</td>\n      <td>casirivimab, imdevimab</td>\n      <td>5814</td>\n      <td>False</td>\n      <td>authorised</td>\n      <td>J06BD</td>\n      <td>True</td>\n      <td>...</td>\n      <td>Roche Registration GmbH</td>\n      <td>Immune sera and immunoglobulins,</td>\n      <td>2021-11-11</td>\n      <td>2023-02-24</td>\n      <td>3.0</td>\n      <td>Ronapreve is indicated for:Treatment of COVID-...</td>\n      <td>NaN</td>\n      <td>2021-11-12T16:30:00Z</td>\n      <td>2023-03-10T12:29:00Z</td>\n      <td>https://www.ema.europa.eu/en/medicines/human/E...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>human</td>\n      <td>Cosentyx</td>\n      <td>Arthritis, Psoriatic;  Psoriasis;  Spondylitis...</td>\n      <td>secukinumab</td>\n      <td>secukinumab</td>\n      <td>3729</td>\n      <td>False</td>\n      <td>authorised</td>\n      <td>L04AC10</td>\n      <td>False</td>\n      <td>...</td>\n      <td>Novartis Europharm Limited</td>\n      <td>Immunosuppressants</td>\n      <td>2014-11-20</td>\n      <td>2023-01-26</td>\n      <td>30.0</td>\n      <td>Plaque psoriasisCosentyx is indicated for the ...</td>\n      <td>NaN</td>\n      <td>2018-06-07T11:59:00Z</td>\n      <td>2023-03-09T18:53:00Z</td>\n      <td>https://www.ema.europa.eu/en/medicines/human/E...</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 28 columns</p>\n</div>\n```\n:::\n:::\n\n\n## Question 1 Solution\n\n::: {#8f6b6178 .cell execution_count=3}\n``` {.python .cell-code}\n# Replace null values with empty string in 'therapeutic_area' column\ndrugs['therapeutic_area'].fillna('', inplace=True)\n\n# Filter COVID vaccines based on 'therapeutic_area'\ncovid_vaccines = drugs[drugs['therapeutic_area'].str.contains('COVID', case=False)]\n\n# Exclude medicines with conditions applied\ncovid_vaccines = covid_vaccines[~covid_vaccines['conditional_approval']]\n\n# Filter the dataset to include only authorised medicines\ncovid_vaccines = covid_vaccines[covid_vaccines['authorisation_status'] == 'authorised']\n\n# Sort the dataset based on 'revision_number' in descending order\ncovid_vaccines_sorted = covid_vaccines.sort_values(by='revision_number', ascending=False)\n\n# Extract relevant columns ('medicine_name' and 'revision_number')\nvaccine_revisions = covid_vaccines_sorted[['revision_number', 'medicine_name', 'therapeutic_area']]\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nC:\\Users\\ual-laptop\\AppData\\Local\\Temp\\ipykernel_1200\\667484765.py:2: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  drugs['therapeutic_area'].fillna('', inplace=True)\n```\n:::\n:::\n\n\n::: {#7c513163 .cell execution_count=4}\n``` {.python .cell-code}\n# Top-5 data\nmedicine_names = vaccine_revisions['medicine_name'][:5]\nrevision_numbers = vaccine_revisions['revision_number'][:5]\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Create bar plot\nbars = ax.bar(medicine_names, revision_numbers, color='skyblue')\n\n# Set labels and title with customized font\nlabel_font = {'fontsize': 12, 'fontweight': 'bold'}\ntitle_font = {'fontsize': 16, 'fontweight': 'bold'}\n\n# Set labels and title\nax.set_xlabel('Medicine Name', fontdict=label_font)\nax.set_ylabel('Revision Number', fontdict=label_font)\nax.set_title('\\n Top 5 COVID vaccines that have undergone the most revisions \\n', fontdict=title_font)\n\n# Wrap long medicine names into two lines\nwrapped_names = [textwrap.fill(name, width=25) for name in medicine_names]\n\n# Set tick labels with line breaks\nax.set_xticklabels(wrapped_names, rotation=30, ha='right')\n\n# Show plot\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nC:\\Users\\ual-laptop\\AppData\\Local\\Temp\\ipykernel_1200\\3540037155.py:24: UserWarning: set_ticklabels() should only be used with a fixed number of ticks, i.e. after set_ticks() or using a FixedLocator.\n  ax.set_xticklabels(wrapped_names, rotation=30, ha='right')\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-5-output-2.png){width=951 height=569}\n:::\n:::\n\n\n## Question 2 Solution\n\n::: {#a89ef5e3 .cell execution_count=5}\n``` {.python .cell-code}\n# Replace null values with empty string in 'therapeutic_area' column\ndrugs['therapeutic_area'].fillna('', inplace=True)\n\n# Filter the dataset to include only medicines related to 'Hepatitis B' in the 'therapeutic_area' variable\nhepatitis_b_medicines = drugs[drugs['therapeutic_area'].str.contains('Hepatitis B', case=False)]\n\n# Filter the dataset to include only medicines for humans in the 'category' variable\nhuman_hepatitis_b_medicines = hepatitis_b_medicines[hepatitis_b_medicines['category'] == 'human']\n\n# Filter the dataset to include only authorised medicines\nauthorised_hepatitis_b_medicines = human_hepatitis_b_medicines[human_hepatitis_b_medicines['authorisation_status'] == 'authorised']\n\n# Sort the dataset based on the 'revision_date' in descending order to get the most recently revised medicines\nrecently_revised_medicines = authorised_hepatitis_b_medicines.sort_values(by='revision_date', ascending=False)\n\n# Extract and display the relevant columns ('medicine_name' and 'marketing_authorisation_holder_company_name') for the most recently revised medicines\ntop_5_result = recently_revised_medicines[['medicine_name', 'marketing_authorisation_holder_company_name', 'revision_date']].head(5)\n\n# Extract only the date part using string operations\ntop_5_result['revision_date'] = top_5_result['revision_date'].str[:10]\n\nprint(top_5_result)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       medicine_name marketing_authorisation_holder_company_name revision_date\n134          Vaxelis                            MCM Vaccine B.V.    2023-02-20\n345         Hexacima                              Sanofi Pasteur    2023-01-06\n346           Hexyon                       Sanofi Pasteur Europe    2023-01-06\n360           Viread                  Gilead Sciences Ireland UC    2023-01-04\n535  Lamivudine Teva                                   Teva B.V.    2022-11-17\n```\n:::\n:::\n\n\n# Option 1: Display results\n\n::: {#003a4d75 .cell execution_count=6}\n``` {.python .cell-code}\n# Custom column labels\ncustom_col_labels = ['Medicine Name', 'Company Name', 'Revision Date']\n\n# Draw a table to display the result\nplt.figure(figsize=(8, 2.5))\ntable = plt.table(cellText=top_5_result.values,\n                  colLabels=custom_col_labels,\n                  loc='center',\n                  cellLoc='center',\n                  colColours=['skyblue']*len(top_5_result.columns),\n                  cellColours=[['lightgrey']*len(top_5_result.columns)]*len(top_5_result),\n                  fontsize=10)\n\ntable.auto_set_font_size(False)\ntable.set_fontsize(10)\ntable.scale(1, 1.5)  # Adjust the scale to make the table more compact\nplt.axis('off')  # Turn off axis\nplt.title('Most recently released Hepatitis B medicines \\n authorized for human usage', fontdict={'fontsize': 14, 'fontweight': 'bold'})\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-7-output-1.png){width=614 height=248}\n:::\n:::\n\n\n# Option 2: Display results\n\n::: {#6a8f776b .cell execution_count=7}\n``` {.python .cell-code}\n# Convert 'revision_date' to datetime data type\ntop_5_result['revision_date'] = pd.to_datetime(top_5_result['revision_date'])\n\n# Plot the scatter plot\nplt.figure(figsize=(10, 6))\nfor medicine, group in top_5_result.groupby('medicine_name'):\n    plt.scatter(group['revision_date'], [medicine] * len(group), label=medicine)\n\n# Customize the plot\nplt.xlabel('Revision Date', fontdict={'fontsize': 12, 'fontweight': 'bold'})\nplt.ylabel('Medicine Name', fontdict={'fontsize': 12, 'fontweight': 'bold'})\nplt.title('Most recently released Hepatitis B medicines \\n authorized for human usage', fontdict={'fontsize': 16, 'fontweight': 'bold'})\nplt.legend()\nplt.grid(True)\nplt.tight_layout()\n\n# Show the plot\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-8-output-1.png){width=950 height=568}\n:::\n:::\n\n\n",
    "supporting": [
      "index_files\\figure-html"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}